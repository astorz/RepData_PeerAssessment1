add2 <- function(x, y) {
x+y
}
add2(3,5)
above <- function(x, n) {
use <- x>n
x[use]
}
x<-c(rnorm(10))
above(x, 2)
above(x, 1.1)
above(x, 0.5)
x
above(x, abs(O.5))
y<-abs(o.5)
y<-abs(0.5)
above(x,y)
above <- function(x, n) {
use <- x>abs(n)
x[use]
}
above(x, 0.5)
above <- function(x, n) {
use <- abs(x)>n
x[use]
}
above(x, 0.5)
above <- function(x, n) {
use <- abs(x)>=n
x[use]
}
above(x, 0.5)
x<-c(x, 0.5)
above(x, 0.5)
colmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
z <- rnorm(11)
y<-matrix(x, z)
x
z
?matrix
y<-matrix(x, z, ncol=2)
y<-matrix(data=x, z, ncol=2)
y<-matrix(data=x, z, ncol=5)
y<-matrix(data=x, z, ncol=10)
x<-rnorm(5)
z<-rnorm(5)
y<-matrix(data=x, z, ncol = 2)
y<-matrix(data=x, z)
y<-matrix(data=c(x, z))
y
y<-matrix(data=c(x, z), ncol=2)
y
colmean(y)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
z<-9
f(3)
f(2)
f(0)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 1
x + g(x)
}
f(1)
f(10)
y <-10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
}
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(solve) i <<- solve
getinverse <- function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
i <- x$getinverse()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
myMatrix <- matrix(1:4, 2, 2)
a <- makeCacheMatrix(myMatrix)
cacheSolve(a)
cacheSolve(a)
x <- 1
attributes(x)
class(x)
x <- 1:10
x
y <- 1
class(y)
class(x)
z <- vector("logical", length=10)
z
z <- as.factor(z)
z
sum(z)
na <- is.na(z)
sum(na)
class(na)
na
z[10,] <- NA
z
z[10] <- NA
z
na <- is.na(z)
sum(na)
na
y <- c(TRUE, 2)
y
x <- 1:10
as.numeric(x)
x[1]
m <- 1:9
dim(m) <- c(2,5)
m
b <- NA
class(b)
class(b) <- numeric
b <- as.numeric
class(b)
b
b <- NA
as.numeric(b)
class(b)
b <- 1:9, NA
b <- c(1:9, NA)
b
class(b)
class(b[10])
myNA <- b[10]
myNA
class(myNA)
0/0
c <- 0/0
c
class(c)
d <- is.na(c)
d
x <- list(foo=1:4,bar=0.6,baz="hello)")
x[["foo"]]
name<-"foo"
x[[name]]
airquality
good <- complete.cases(airquality)
airquality[good,][1:6,]
head(airquality[good,])
setwd("~/Documents/Andreas/Analytics/MOOCs/DataScience_Coursera/05_ReproducibleResearch/PA1/RepData_PeerAssessment1")
head(activityData)
activityData <- read.csv("activity.csv", header=TRUE)
names(activityData)
unique(activityData$interval)
60*24
1440/5
myNAs <- is.na(activityData$steps)
sum(myNAs)
length(activityData$steps)
2304/288
dailyNAs <- with(activityData, tapply(steps,data,sum(is.na(x)))
dailyNAs <- with(activityData, tapply(steps,data,sum(is.na(x))))
dailyNAs <- with(activityData, tapply(steps,data,sum(is.na))
dailyNAs <- with(activityData, tapply(steps,data,sum(is.na)))
dailyNAs <- with(activityData, tapply(steps,data,is.na))
dailyNAs <- with(activityData, tapply(steps,data,is.na(x)))
dailyNAs <- with(activityData, tapply(steps,date,sum(is.na(x)))
dailyNAs <- with(activityData, tapply(steps,date,sum(is.na(x))))
dailyNAs <- with(activityData, tapply(steps,date,is.na(x)))
dailyNAs <- with(activityData, tapply(steps,date,is.na))
dailyNAs
table(sum(dailyNAs))
sum(dailyNAs)
sapply(dailyNAs,sum)
table(sapply(dailyNAs,sum))
sum(dailyNAs)
sum(is.na(activityData$steps))
dailyPattern <- sapply(split(activityData$steps, activityData$interval), mean, na.rm=T)
head(dailyPattern)
dailyPattern
class(dailyPattern)
activityData$meanStepsInt <- rep(dailyPattern,61)
head(activityData)
activityData[280:320,]
length(dailyPattern)
tail(activityData)
library(plyr)
activityDataComplete <- mutate(activityData,steps=ifelse(is.na(steps),meanStepsInt,steps))
head(activityDataComplete)
sum(is.na(steps$activityDataComplete))
sum(is.na(activityDataComplete$steps))
activityDataComplete <- activityDataComplete[,1:3]
dim(activityDataComplete)
dim(activityData)
totalSteps2 <- with(activityDataImputed, tapply(steps,date,sum))
activityData$meanStepsInt <- rep(dailyPattern,61)
library(plyr)
activityDataImputed <- mutate(activityData,steps=ifelse(is.na(steps),meanStepsInt,steps))
activityDataImputed <- activityDataImputed[,1:3]
totalSteps2 <- with(activityDataImputed, tapply(steps,date,sum))
qplot(totalSteps2, binwidth=500) + labs(x = "Number of steps", y = "Frequency") + scale_x_continuous(minor_breaks = seq(0, 25000, 1000)) + scale_y_continuous(breaks=seq(0,20,1))
library(ggplot2)
qplot(totalSteps2, binwidth=500) + labs(x = "Number of steps", y = "Frequency") + scale_x_continuous(minor_breaks = seq(0, 25000, 1000)) + scale_y_continuous(breaks=seq(0,20,1))
qplot(totalSteps2, binwidth=1000) + labs(x = "Number of steps", y = "Frequency") + scale_x_continuous(minor_breaks = seq(0, 25000, 1000)) + scale_y_continuous(breaks=seq(0,20,1))
dates <- unique(activityData$date)
head(dates)
weekdays(dates[1:5])
dates <- as.POSIXct(dates)
weekdays(dates[1:5])
activityDataImputed$date <- as.POSIXct(activityDataImputed$date)
activityDataImputed$date <- as.POSIXct(activityDataImputed$date)
weekdaysList <- c("Monday","Tuesday","Wednesday","Thursday","Friday")
activityDataImputed$weekday <- ifelse(weekdays(activityDataImputed$date) %in% weekdaysList, "weekday","weekend")
head(activityDataImputed)
unique(activityDataImputed$weekday)
activityDataImputed$weekday <- factor(ifelse(weekdays(activityDataImputed$date) %in% weekdaysList, "weekday","weekend"))
class(activityDataImputed$weekday)
activityDataImputed$weekday
length(activityDataImputed$weekday)
unique(activityDataImputed$weekday)
as.numeric(activityDataImputed$weekday)
as.numeric(levels(activityDataImputed$weekday))
names(activityDataImputed)
unique(activityDataImputed$weekday)
splitData <- split(activityDataImputed,activityDataImputed$weekday=="weekday")
head(splitData[1])
weekendData <- splitData[1]
head(weekendData)
weekendData <- data.frame(splitData[1])
head(weekendData)
weekdayData <- data.frame(splitData[2])
head(weekdayData)
dim(weekdayData)
dim(weekendData)
4608/2
2304*7
2304*5
names(activityDataImputed)
varNames <- names(activityDataImputed)
names(weekendData) = varNames
head(weekendData)
weekendData <- data.frame(splitData[1])
weekdayData <- data.frame(splitData[2])
varNames <- names(activityDataImputed)
names(weekendData) <- varNames
names(weekdayData) <- varNames
dailyPatternWeekdays <- sapply(split(weekdayData$steps, weekdayData$interval), mean, na.rm=T)
dailyPatternWeekends <- sapply(split(weekendData$steps, weekendData$interval), mean, na.rm=T)
weekendData2 <- activityDataImputed[activityDataImputed$weekday=="weekend",]
head(weekendData2)
weekendData <- activityDataImputed[activityDataImputed$weekday=="weekend",]
weekdayData <- activityDataImputed[activityDataImputed$weekday=="weekday",]
dim(weekendData)
dim(weekdayData)
4608+12960
dim(activityData)
dailyPatternWeekdays <- sapply(split(weekdayData$steps, weekdayData$interval), mean, na.rm=T)
dailyPatternWeekends <- sapply(split(weekendData$steps, weekendData$interval), mean, na.rm=T)
par(mfrow=c(1,2))
plot(names(dailyPatternWeekdays), dailyPatternWeekdays, type="l", xlab="Interval", ylab="Number of steps", main="Average daily activity pattern on weekdays")
plot(names(dailyPatternWeekends), dailyPatternWeekends, type="l", xlab="Interval", ylab="Number of steps", main="Average daily activity pattern on weekends")
par(mfrow=c(2,1))
plot(names(dailyPatternWeekdays), dailyPatternWeekdays, type="l", xlab="Interval", ylab="Number of steps", main="Average daily activity pattern on weekdays")
plot(names(dailyPatternWeekends), dailyPatternWeekends, type="l", xlab="Interval", ylab="Number of steps", main="Average daily activity pattern on weekends")
Result/summary: XXX
plot(names(dailyPattern), dailyPattern, type="l", col="blue", xlab="Interval", ylab="Number of steps", main="Average daily activity pattern across 5-minute intervals")
library(lattice)
xyplot(mean(steps)~interval|weekday, data=activityDataImputed, type="l")
xyplot(steps~interval|weekday, data=activityDataImputed, type="l")
xyplot(mean(steps)~interval|weekday, data=activityDataImputed, type="l")
dailyPatternWeekends
names(dailyPatternWeekends)
df <- data.frame(dailyPatternWeekends)
names(df)
head(df)
with(weekendData, tapply(steps,interval, mean)
test <- with(weekendData, tapply(steps,interval, mean))
test <- with(weekendData, tapply(steps,interval, mean))
head(tets)
head(test)
names(test)
test2 <- with(weekdayData, tapply(steps,interval, mean))
c <- cbind(test,test2)
head(c)
d <- rbind(test,test2)
head(d)
names(d)
xyplot(dailyPatternWeekdays)
length(d)
weekdaysPattern <- data.frame(rbind(dailyPatternWeekdays,dailyPatternWeekends))
head(weekdaysPattern)
names(weekdaysPattern)
weekdaysPattern <- data.frame(cbind(dailyPatternWeekdays,dailyPatternWeekends))
names(weekdaysPattern)
head(weekdaysPattern)
weekdaysPattern <- data.frame(rbind(dailyPatternWeekdays,dailyPatternWeekends))
dim(weekdaysPattern)
head(weekdaysPattern)
names(weekdaysPattern)
weekend <- data.frame(dailyPatternWeekends)
head(weekend)
myWeekdays <- data.frame(dailyPatternWeekdays)
head(myWeekdays)
myJoin <- rbind(weekend,myWeekdays)
myJoin <- c(weekend,myWeekdays)
head(myJoin)
myJoin <- data.frame(rbind(weekend,myWeekdays))
myJoin <- data.frame(cbind(weekend,myWeekdays))
head(myJoin)
names(activityDataImputed)
xyplot(mean(steps)~interval|weekday, data=activityDataImputed, type="l")
xyplot(steps~mean(interval)|weekday, data=activityDataImputed, type="l")
xyplot(steps~interval|weekday, data=activityDataImputed, type="l")
lineplot <- ggplot(activityDataImputed, aes(mean(steps),interval))
lineplot + geom_line()
lineplot <- ggplot(activityDataImputed, aes(interval,mean(steps)))
lineplot + geom_line()
lineplot <- ggplot(activityDataImputed, aes(interval,steps))
lineplot + geom_line()
lineplot + geom_line() + facet_wrap(~weekday)
lineplot + geom_line() + facet_wrap(~weekday, nrow=2)
head(dailyPatternWeekdays)
dfWD <- data.frame(dailyPatternWeekdays)
head(dfWD)
dfWDTest <- rbind(dailyPatternWeekends)
head(dfWDTest)
names(dfWDTest)
length(dfWDTest)
dailyPatternWeekends
df <- data.frame(rbind(dailyPatternWeekdays,dailyPatternWeekends))
dim(df)
names(df)
dfWD
newDF <- append(dfWD,dfWE)
dfWE <- data.frame(dailyPatternWeekends)
newDF <- append(dfWD,dfWE)
dim(newDF)
newDF
newVar <- append(dailyPatternWeekdays,dailyPatternWeekends)
dim(newVar)
head(newVar)
length(newVar)
newVar
weekdaysSteps <- append(dailyPatternWeekdays,dailyPatternWeekends)
dailyPatternDF <- data.frame("steps"=weekdaysSteps,"interval"=rep(unique(activityDataImputed$interval,2)),"weekday"=c(rep("weekday",288),rep("weekend"),288))
dailyPatternDF <- data.frame("steps"=weekdaysSteps,"interval"=rep(unique(activityDataImputed$interval),2),"weekday"=c(rep("weekday",288),rep("weekend",288)))
dailyPatternDF
xyplot(steps~interval|weekday,data=dailyPatternDF, type="l")
xyplot(steps~interval|weekday,data=dailyPatternDF, type="l", ylab="Interval", xlab="Number of steps", main="Average activity pattern: weekends VS. weekdays")
xyplot(steps~interval|weekday,data=dailyPatternDF, type="l", ylab="Interval", xlab="Number of steps", main="Average activity pattern: weekends VS. weekdays")
