add2 <- function(x, y) {
x+y
}
add2(3,5)
above <- function(x, n) {
use <- x>n
x[use]
}
x<-c(rnorm(10))
above(x, 2)
above(x, 1.1)
above(x, 0.5)
x
above(x, abs(O.5))
y<-abs(o.5)
y<-abs(0.5)
above(x,y)
above <- function(x, n) {
use <- x>abs(n)
x[use]
}
above(x, 0.5)
above <- function(x, n) {
use <- abs(x)>n
x[use]
}
above(x, 0.5)
above <- function(x, n) {
use <- abs(x)>=n
x[use]
}
above(x, 0.5)
x<-c(x, 0.5)
above(x, 0.5)
colmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for (i in 1:nc) {
means[i] <- mean(y[,i])
}
means
}
z <- rnorm(11)
y<-matrix(x, z)
x
z
?matrix
y<-matrix(x, z, ncol=2)
y<-matrix(data=x, z, ncol=2)
y<-matrix(data=x, z, ncol=5)
y<-matrix(data=x, z, ncol=10)
x<-rnorm(5)
z<-rnorm(5)
y<-matrix(data=x, z, ncol = 2)
y<-matrix(data=x, z)
y<-matrix(data=c(x, z))
y
y<-matrix(data=c(x, z), ncol=2)
y
colmean(y)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
z<-9
f(3)
f(2)
f(0)
f <- function(x) {
g <- function(y) {
y + z
}
z <- 1
x + g(x)
}
f(1)
f(10)
y <-10
f <- function(x) {
y <- 2
y^2 + g(x)
}
g <- function(x) {
x*y
}
f(3)
}
makeCacheMatrix <- function(x = matrix()) {
i <- NULL
set <- function(y) {
x <<- y
i <<- NULL
}
get <- function() x
setinverse <- function(solve) i <<- solve
getinverse <- function() i
list(set = set, get = get,
setinverse = setinverse,
getinverse = getinverse)
}
cacheSolve <- function(x, ...) {
i <- x$getinverse()
if(!is.null(i)) {
message("getting cached data")
return(i)
}
data <- x$get()
i <- solve(data, ...)
x$setinverse(i)
i
}
myMatrix <- matrix(1:4, 2, 2)
a <- makeCacheMatrix(myMatrix)
cacheSolve(a)
cacheSolve(a)
x <- 1
attributes(x)
class(x)
x <- 1:10
x
y <- 1
class(y)
class(x)
z <- vector("logical", length=10)
z
z <- as.factor(z)
z
sum(z)
na <- is.na(z)
sum(na)
class(na)
na
z[10,] <- NA
z
z[10] <- NA
z
na <- is.na(z)
sum(na)
na
y <- c(TRUE, 2)
y
x <- 1:10
as.numeric(x)
x[1]
m <- 1:9
dim(m) <- c(2,5)
m
b <- NA
class(b)
class(b) <- numeric
b <- as.numeric
class(b)
b
b <- NA
as.numeric(b)
class(b)
b <- 1:9, NA
b <- c(1:9, NA)
b
class(b)
class(b[10])
myNA <- b[10]
myNA
class(myNA)
0/0
c <- 0/0
c
class(c)
d <- is.na(c)
d
x <- list(foo=1:4,bar=0.6,baz="hello)")
x[["foo"]]
name<-"foo"
x[[name]]
airquality
good <- complete.cases(airquality)
airquality[good,][1:6,]
head(airquality[good,])
1+1
setwd("~/Documents/Andreas/Analytics/MOOCs/DataScience_Coursera/05_ReproducibleResearch/PA1/RepData_PeerAssessment1")
setwd("~/Documents/Andreas/Analytics/MOOCs/DataScience_Coursera/05_ReproducibleResearch/PA1/RepData_PeerAssessment1")
dailyPattern <- sapply(split(activityData$steps, activityData$interval), mean, na.rm=T)
setwd("~/Documents/Andreas/Analytics/MOOCs/DataScience_Coursera/05_ReproducibleResearch/PA1/RepData_PeerAssessment1")
